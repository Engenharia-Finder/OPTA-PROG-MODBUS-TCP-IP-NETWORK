#include "arduino_secrets.h"

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/8e0e89b4-fb69-4988-88ad-0401e1537a92 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float leitura1;
  float leitura10;
  float leitura11;
  float leitura12;
  float leitura13;
  float leitura14;
  float leitura15;
  float leitura16;
  float leitura17;
  float leitura18;
  float leitura19;
  float leitura2;
  float leitura20;
  float leitura21;
  float leitura22;
  float leitura23;
  float leitura24;
  float leitura25;
  float leitura26;
  float leitura27;
  float leitura28;
  float leitura29;
  float leitura3;
  float leitura30;
  float leitura4;
  float leitura5;
  float leitura6;
  float leitura7;
  float leitura8;
  float leitura9;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <SPI.h>
#include <Ethernet.h>
#include <ArduinoModbus.h>

byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xEE };
IPAddress ip(192, 168, 68, 109); // IP Ãºnico para o segundo Arduino OPTA
EthernetClient ethClient;
EthernetClient ethClient2;
EthernetClient ethClient3;
ModbusTCPClient modbusTCPClient(ethClient); // Passando o objeto EthernetClient
ModbusTCPClient modbusTCPClient2(ethClient2); // Passando o objeto EthernetClient
ModbusTCPClient modbusTCPClient3(ethClient3); // Passando o objeto EthernetClient

unsigned long previousMillis = 0;     // VariÃ¡vel para armazenar o tempo anterior
const unsigned long interval = 50;   // Intervalo em milissegundos (500 ms)

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  ArduinoCloud.addCallback(ArduinoIoTCloudEvent::SYNC, doThisOnSync);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  delay(1500);

  // Inicializa Ethernet com IP do cliente
  Ethernet.begin(mac, ip);
  delay(1000);

  // Verifica se o hardware Ethernet estÃ¡ funcionando
  if (Ethernet.hardwareStatus() == EthernetNoHardware) {
    Serial.println("Hardware Ethernet nÃ£o encontrado.");
    while (true);
  }


  


  // Configura saÃ­da do LED
  pinMode(LED_D0, OUTPUT);

  
  
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  
  unsigned long currentMillis = millis();
  
  if (currentMillis - previousMillis >= interval){

/************************************************************************************************************************************************/
/*                                                                                                                                              */
/*                                                    LEITURA OPTA SECUNDÃRIO 1                                                                 */
/*                                                                                                                                              */
/************************************************************************************************************************************************/
  
    //LEITURA I1
    int sensorValue1 = modbusTCPClient.holdingRegisterRead(1);  // LÃª o valor do registro
    float voltage1 = sensorValue1 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura1 = voltage1;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage1);

    //LEITURA I2
    int sensorValue2 = modbusTCPClient.holdingRegisterRead(2);  // LÃª o valor do registro
    float voltage2 = sensorValue2 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura2 = voltage2;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage2);

    //LEITURA I3
    int sensorValue3 = modbusTCPClient.holdingRegisterRead(3);  // LÃª o valor do registro
    float voltage3 = sensorValue3 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura3 = voltage3;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage3);

    //LEITURA I4
    int sensorValue4 = modbusTCPClient.holdingRegisterRead(4);  // LÃª o valor do registro
    float voltage4 = sensorValue4 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura4 = voltage4;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage4);
  
    //LEITURA I5
    int sensorValue5 = modbusTCPClient.holdingRegisterRead(5);  // LÃª o valor do registro
    float voltage5 = sensorValue5 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura5 = voltage5;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage5);
  
    //LEITURA I6
    int sensorValue6 = modbusTCPClient.holdingRegisterRead(6);  // LÃª o valor do registro
    float voltage6 = sensorValue6 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura6 = voltage6;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage6);

    //LEITURA I7
    int sensorValue7 = modbusTCPClient.holdingRegisterRead(7);  // LÃª o valor do registro
    float voltage7 = sensorValue7 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura7 = voltage7;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage7);

    //LEITURA I8
    int sensorValue8 = modbusTCPClient.holdingRegisterRead(8);  // LÃª o valor do registro
    float voltage8 = sensorValue8 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura8 = voltage8;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage8);

/************************************************************************************************************************************************/
/*                                                                                                                                              */
/*                                                    LEITURA OPTA SECUNDÃRIO 2                                                                 */
/*                                                                                                                                              */
/************************************************************************************************************************************************/
  

    //LEITURA I1
    int sensorValue9 = modbusTCPClient2.holdingRegisterRead(1);  // LÃª o valor do registro
    float voltage9 = sensorValue9 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura9 = voltage9;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage9);

    //LEITURA I2
    int sensorValue10 = modbusTCPClient2.holdingRegisterRead(2);  // LÃª o valor do registro
    float voltage10 = sensorValue10 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura10 = voltage10;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage10);

    //LEITURA I3
    int sensorValue11 = modbusTCPClient2.holdingRegisterRead(3);  // LÃª o valor do registro
    float voltage11 = sensorValue11 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura11 = voltage11;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage11);

    //LEITURA I4
    int sensorValue12 = modbusTCPClient2.holdingRegisterRead(4);  // LÃª o valor do registro
    float voltage12 = sensorValue12 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura12 = voltage12;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage12);

    //LEITURA I5
    int sensorValue13 = modbusTCPClient2.holdingRegisterRead(5);  // LÃª o valor do registro
    float voltage13 = sensorValue13 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura13 = voltage13;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage13);

    //LEITURA I6
    int sensorValue14 = modbusTCPClient2.holdingRegisterRead(6);  // LÃª o valor do registro
    float voltage14 = sensorValue14 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura14 = voltage14;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage14);

    //LEITURA I7
    int sensorValue15 = modbusTCPClient2.holdingRegisterRead(7);  // LÃª o valor do registro
    float voltage15 = sensorValue15 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura15 = voltage15;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage15);

    //LEITURA I8
    int sensorValue16 = modbusTCPClient2.holdingRegisterRead(8);  // LÃª o valor do registro
    float voltage16 = sensorValue16 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura16 = voltage16;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage16);


/************************************************************************************************************************************************/
/*                                                                                                                                              */
/*                                                    LEITURA OPTA SECUNDÃRIO 3                                                                 */
/*                                                                                                                                              */
/************************************************************************************************************************************************/


    //LEITURA I1
    int sensorValue17 = modbusTCPClient3.holdingRegisterRead(1);  // LÃª o valor do registro
    float voltage17 = sensorValue17 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura17 = voltage17;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage17);

    //LEITURA I2
    int sensorValue18 = modbusTCPClient3.holdingRegisterRead(2);  // LÃª o valor do registro
    float voltage18 = sensorValue18 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura18 = voltage18;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage18);

    //LEITURA I3
    int sensorValue19 = modbusTCPClient3.holdingRegisterRead(3);  // LÃª o valor do registro
    float voltage19 = sensorValue19 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura19 = voltage19;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage19);

    //LEITURA I4
    int sensorValue20 = modbusTCPClient3.holdingRegisterRead(4);  // LÃª o valor do registro
    float voltage20 = sensorValue20 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura20 = voltage20;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage20);

    //LEITURA I5
    int sensorValue21 = modbusTCPClient3.holdingRegisterRead(5);  // LÃª o valor do registro
    float voltage21 = sensorValue21 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura21 = voltage21;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage21);

    //LEITURA I6
    int sensorValue22 = modbusTCPClient3.holdingRegisterRead(6);  // LÃª o valor do registro
    float voltage22 = sensorValue22 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura22 = voltage22;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage22);

    //LEITURA I7
    int sensorValue23 = modbusTCPClient3.holdingRegisterRead(7);  // LÃª o valor do registro
    float voltage23 = sensorValue23 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura23 = voltage23;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage23);

    //LEITURA I8
    int sensorValue24 = modbusTCPClient3.holdingRegisterRead(8);  // LÃª o valor do registro
    float voltage24 = sensorValue24 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura24 = voltage24;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage24);

/* -------------------------------------------------------------------------- */
    
    //LEITURA I1 EXP1
    int sensorValue25 = modbusTCPClient3.holdingRegisterRead(9);  // LÃª o valor do registro
    float voltage25 = sensorValue25 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura25 = voltage25;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage25);
    
    //LEITURA I2 EXP1
    int sensorValue26 = modbusTCPClient3.holdingRegisterRead(10);  // LÃª o valor do registro
    float voltage26 = sensorValue26 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura26 = voltage26;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage26);

    //LEITURA I3 EXP1
    int sensorValue27 = modbusTCPClient3.holdingRegisterRead(11);  // LÃª o valor do registro
    float voltage27 = sensorValue27 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura27 = voltage27;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage27);

    //LEITURA I4 EXP1
    int sensorValue28 = modbusTCPClient3.holdingRegisterRead(12);  // LÃª o valor do registro
    float voltage28 = sensorValue28 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura28 = voltage28;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage28);

    //LEITURA O1 EXP1
    int sensorValue29 = modbusTCPClient3.holdingRegisterRead(13);  // LÃª o valor do registro
    float voltage29 = sensorValue29 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura29 = voltage29;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage29);

    //LEITURA I5 EXP1
    int sensorValue30 = modbusTCPClient3.holdingRegisterRead(14);  // LÃª o valor do registro
    float voltage30 = sensorValue30 * (10.0 / 7490.0) * 10;  // Converte o valor lido para volts (0 a 10V)
    leitura30 = voltage30;
    Serial.print("TensÃ£o recebida (V): ");
    Serial.println(voltage30);

  
  /*
  
    // LÃª valor da coil no endereÃ§o 0 do servidor Modbus
    bool comando = modbusTCPClient.coilRead(0);  // LÃª o comando da coil no endereÃ§o 0
    Serial.println("ConexÃ£o com o servidor estabelecida");
    // Executa aÃ§Ã£o no LED com base no comando recebido
    if (comando) {
      digitalWrite(LED_D0, HIGH);
      Serial.println("LED D0 LIGADO");
    } else {
      digitalWrite(LED_D0, LOW);
      Serial.println("LED D0 DESLIGADO");
    }
  delay(500);
  */

    }
  
  
  }

void doThisOnSync(){
  checkModbus();
}



void checkModbus(){

  // Conecta-se ao servidor Modbus (primeiro Arduino OPTA)
  IPAddress serverIP(192, 168, 68, 106); // IP do servidor
  if (!modbusTCPClient.begin(serverIP, 502)) {
    Serial.println("Falha na conexÃ£o com o servidor Modbus");
    while (true);
  }

  IPAddress serverIP2(192, 168, 68, 107); // IP do servidor
  if (!modbusTCPClient2.begin(serverIP2, 502)) {
    Serial.println("Falha na conexÃ£o com o servidor Modbus");
    while (true);
  }
  
  IPAddress serverIP3(192, 168, 68, 108); // IP do servidor
  if (!modbusTCPClient3.begin(serverIP3, 502)) {
    Serial.println("Falha na conexÃ£o com o servidor Modbus");
    while (true);
  }
  
}









